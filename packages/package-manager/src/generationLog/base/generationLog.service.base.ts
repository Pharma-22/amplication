/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  GenerationLog as PrismaGenerationLog,
  PackageModel as PrismaPackageModel,
} from "@prisma/client";

export class GenerationLogServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GenerationLogCountArgs, "select">
  ): Promise<number> {
    return this.prisma.generationLog.count(args);
  }

  async generationLogs(
    args: Prisma.GenerationLogFindManyArgs
  ): Promise<PrismaGenerationLog[]> {
    return this.prisma.generationLog.findMany(args);
  }
  async generationLog(
    args: Prisma.GenerationLogFindUniqueArgs
  ): Promise<PrismaGenerationLog | null> {
    return this.prisma.generationLog.findUnique(args);
  }
  async createGenerationLog(
    args: Prisma.GenerationLogCreateArgs
  ): Promise<PrismaGenerationLog> {
    return this.prisma.generationLog.create(args);
  }
  async updateGenerationLog(
    args: Prisma.GenerationLogUpdateArgs
  ): Promise<PrismaGenerationLog> {
    return this.prisma.generationLog.update(args);
  }
  async deleteGenerationLog(
    args: Prisma.GenerationLogDeleteArgs
  ): Promise<PrismaGenerationLog> {
    return this.prisma.generationLog.delete(args);
  }

  async getPackageField(parentId: string): Promise<PrismaPackageModel | null> {
    return this.prisma.generationLog
      .findUnique({
        where: { id: parentId },
      })
      .packageField();
  }
}
