/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  PackageFile as PrismaPackageFile,
  PackageModel as PrismaPackageModel,
} from "@prisma/client";

export class PackageFileServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PackageFileCountArgs, "select">
  ): Promise<number> {
    return this.prisma.packageFile.count(args);
  }

  async packageFiles(
    args: Prisma.PackageFileFindManyArgs
  ): Promise<PrismaPackageFile[]> {
    return this.prisma.packageFile.findMany(args);
  }
  async packageFile(
    args: Prisma.PackageFileFindUniqueArgs
  ): Promise<PrismaPackageFile | null> {
    return this.prisma.packageFile.findUnique(args);
  }
  async createPackageFile(
    args: Prisma.PackageFileCreateArgs
  ): Promise<PrismaPackageFile> {
    return this.prisma.packageFile.create(args);
  }
  async updatePackageFile(
    args: Prisma.PackageFileUpdateArgs
  ): Promise<PrismaPackageFile> {
    return this.prisma.packageFile.update(args);
  }
  async deletePackageFile(
    args: Prisma.PackageFileDeleteArgs
  ): Promise<PrismaPackageFile> {
    return this.prisma.packageFile.delete(args);
  }

  async getPackageField(parentId: string): Promise<PrismaPackageModel | null> {
    return this.prisma.packageFile
      .findUnique({
        where: { id: parentId },
      })
      .packageField();
  }
}
